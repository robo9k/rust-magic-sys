name: setup-libmagic
description: Setup some version of `libmagic` for `magic-sys`
inputs:
  linkage:
    description: 'How to link (against `libmagic`): "static" / "dynamic"'
    default: static

runs:
  using: 'composite'
  steps:
    # check inputs
    - name: check inputs
      run: |
        if [[ ! ("${INPUT_LINKAGE}" == "static" || "${INPUT_LINKAGE}" == "dynamic") ]]; then
          echo "'linkage' input must be either 'static' or 'dynamic' but it is: ${INPUT_LINKAGE}"
          exit 1
        fi
      shell: bash
      env:
        INPUT_LINKAGE: ${{ inputs.linkage }}


    # setup environment

    - name: setup environment
      if: ${{ runner.os == 'Linux' }}
      run: echo "VCPKGRS_NO_LIBMAGIC=1" >> "${GITHUB_ENV}"
      shell: bash

    - name: setup environment
      if: ${{ runner.os == 'Windows' }}
      run: echo "LIBMAGIC_NO_PKG_CONFIG=1" >> "${GITHUB_ENV}"
      shell: bash

    - name: setup environment
      if: ${{ runner.os == 'macOS' }}
      run: echo "VCPKGRS_NO_LIBMAGIC=1" >> "${GITHUB_ENV}"
      shell: bash


    # setup linkage

    - name: setup linkage
      if: ${{ runner.os == 'Linux' }}
      run: |
        if [[ "${INPUT_LINKAGE}" == "static" ]]; then
          echo "LIBMAGIC_STATIC=1" >> "${GITHUB_ENV}"
        elif [[ "${INPUT_LINKAGE}" == "dynamic" ]]; then
          echo "LIBMAGIC_DYNAMIC=1" >> "${GITHUB_ENV}"
        fi
      shell: bash
      env:
        INPUT_LINKAGE: ${{ inputs.linkage }}

    - name: setup linkage
      if: ${{ runner.os == 'Windows' }}
      run: |
        if [[ "${INPUT_LINKAGE}" == "static" ]]; then
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static-md" >> "${GITHUB_ENV}"
        elif [[ "${INPUT_LINKAGE}" == "dynamic" ]]; then
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows" >> "${GITHUB_ENV}"
          echo "VCPKGRS_DYNAMIC=1" >> "${GITHUB_ENV}"
        fi
      shell: bash
      env:
        INPUT_LINKAGE: ${{ inputs.linkage }}

    - name: setup linkage
      if: ${{ runner.os == 'macOS' }}
      run: |
        if [[ "${INPUT_LINKAGE}" == "static" ]]; then
          echo "LIBMAGIC_STATIC=1" >> "${GITHUB_ENV}"
        elif [[ "${INPUT_LINKAGE}" == "dynamic" ]]; then
          echo "LIBMAGIC_DYNAMIC=1" >> "${GITHUB_ENV}"
        fi
      shell: bash
      env:
        INPUT_LINKAGE: ${{ inputs.linkage }}


    # update packages

    - name: update packages
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update
      shell: bash

    - name: update packages
      if: ${{ runner.os == 'Windows' }}
      run: |
        git -C "${VCPKG_INSTALLATION_ROOT}" pull
        vcpkg update
      shell: bash

    - name: update packages
      if: ${{ runner.os == 'macOS' }}
      run: brew update
      shell: bash


    # install packages

    - name: install packages
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get install libmagic1 libmagic-dev pkg-config
      shell: bash
    - name: install additional packages
      if: ${{ runner.os == 'Linux' && inputs.linkage == 'static' }}
      run: sudo apt-get install libbz2-dev liblzma-dev zlib1g-dev
      shell: bash

    - name: install packages
      if: ${{ runner.os == 'Windows' }}
      # see https://github.com/robo9k/rust-magic-sys/pull/59 for not using VCPKG_INSTALLATION_ROOT
      run: |
        vcpkg install libmagic
        echo "VCPKG_INSTALLATION_ROOT: ${VCPKG_INSTALLATION_ROOT}"
        echo "VCPKG_ROOT=C:\vcpkg" >> "${GITHUB_ENV}"
      shell: bash

    - name: install packages
      if: ${{ runner.os == 'macOS' }}
      run: brew install libmagic pkg-config
      shell: bash
