name: "test-libmagic-version"

permissions: {}

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    name: "cargo test && bindgen"
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - version: "5.39"
            sha512sum: "9cf1a7b769c56eb6f5b25c66ce85fa1300128396e445b2e53dbbd8951e5da973a7a07c4ef9f7ebd1fe945d47bdaf2cd9ef09bd2be6c217a0bcb907d9449835e6"
            feature: ""
          - version: "5.40"
            sha512sum: "3b70df75fa4c9050d55b1ffdc28e5f3c8b8ef7d4efd1a06bf53f113b676d81114a85aae56e0897d32b53716662d64ad18ab251ca8c92c6405c69eb758bb99afb"
            feature: "v5-40"
          - version: "5.41"
            sha512sum: "bbf2d8e39450b31d0ba8d76d202790fea953775657f942f06e6dc9091798d4a395f7205e542388e4a25b6a4506d07f36c5c4da37cfce0734133e9203a3b00654"
            feature: "v5-40"
          - version: "5.42"
            sha512sum: "33c3c339a561c6cf787cc06a16444a971c62068b01827612c948207a9714107b617bed8148cd67e6280cb1c62ad4dfb1205fb8486ea9c042ce7e19b067d3bb05"
            feature: "v5-40"
          - version: "5.43"
            sha512sum: "9d02f4e7a69d90468d6bd35df5ec240ddee8c2408b7df3e73427d7f18736baf77db0638a1fe8283f4e6abd1d5ad653890ed3a5a0d48bb52d4023ca4070ecdf06"
            feature: "v5-40"
          - version: "5.44"
            sha512sum: "26c3b9c7a6950649d0b2de896bfeca54289febe4cd487c0f91aa6ff1857fa49f9077f8738a17b86100125668a31dae05b586615c564f78da47ac20a1e4a74f63"
            feature: "v5-40"
          - version: "5.45"
            sha512sum: "12611a59ff766c22a55db4b4a9f80f95a0a2e916a1d8593612c6ead32c247102a8fdc23693c6bf81bda9b604d951a62c0051e91580b1b79e190a3504c0efc20a"
            feature: "v5-40"
          - version: "5.46"
            sha512sum: "a6cb7325c49fd4af159b7555bdd38149e48a5097207acbe5e36deb5b7493ad6ea94d703da6e0edece5bb32959581741f4213707e5cb0528cd46d75a97a5242dc"
            feature: "v5-40"
      fail-fast: false
    runs-on: ubuntu-24.04
    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - run: |
          sudo apt-get update
          sudo apt-get install automake gcc libtool make python3 zlib1g-dev llvm-dev libclang-dev clang

      - id: tarball
        run: echo "file=$(mktemp '${{ runner.temp }}/file-${{ matrix.version }}-XXX.tgz')" >> "${GITHUB_OUTPUT}"

      - run: curl --output '${{ steps.tarball.outputs.file }}' 'https://astron.com/pub/file/file-${{ matrix.version }}.tar.gz'

      - run: echo '${{ matrix.sha512sum }} ${{ steps.tarball.outputs.file }}' | sha512sum --check --status

      - id: release
        run: |
          DIR="$(mktemp --directory '${{ runner.temp }}/file-${{ matrix.version }}-release-XXX')"
          tar --directory "${DIR}" --strip-components=1 -xzf '${{ steps.tarball.outputs.file }}'
          echo "dir=${DIR}" >> "${GITHUB_OUTPUT}"

      - id: prefix
        run: |
          DIR="$(mktemp --directory '${{ runner.temp }}/file-${{ matrix.version }}-prefix-XXX')"
          echo "dir=${DIR}" >> "${GITHUB_OUTPUT}"

      - run: |
          cd '${{ steps.release.outputs.dir }}'
          autoreconf -f -i
          ./configure --disable-silent-rules --prefix='${{ steps.prefix.outputs.dir }}' --enable-static
          make
          make install

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: file-${{ matrix.version }}
          path: |
            ${{ steps.prefix.outputs.dir }}/include/
            ${{ steps.prefix.outputs.dir }}/lib/pkgconfig/
            ${{ steps.prefix.outputs.dir }}/share/misc/
    
      - run: echo "PKG_CONFIG_PATH=${{ steps.prefix.outputs.dir }}/lib/pkgconfig" >> "${GITHUB_ENV}"

      - id: toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # doesn't have usual versioned releases/tags
        with:
          toolchain: "1.88.0" # current pinned stable
          # minimal profile includes rustc component which includes cargo and rustdoc
          components: "rustfmt"

      - uses: rui314/setup-mold@7344740a9418dcdcb481c7df83d9fbd1d5072d7d # does not have recent tags

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0 

      - run: cargo +${{ steps.toolchain.outputs.name }} build --verbose --verbose --locked --all-targets --features '${{ matrix.feature }}'

      - run: cargo +${{ steps.toolchain.outputs.name }} test --locked --all-targets --features '${{ matrix.feature }}' --verbose

      - run: |
          cd systest
          cargo run --features '${{ matrix.feature }}'

      - uses: taiki-e/install-action@f63c33fd96cc1e69a29bafd06541cf28588b43a4 # v2.58.21
        with:
          # renovate: taiki-e/install-action
          tool: bindgen-cli@0.72.0

      - id: bindings
        run: |
          DIR="$(mktemp --directory '${{ runner.temp }}/file-${{ matrix.version }}-bindings-XXX')"
          echo "dir=${DIR}" >> "${GITHUB_OUTPUT}"

      # bindgen doesn't exactly match crate MSRV
      - run: >
          bindgen
          --use-core
          --no-size_t-is-usize
          --allowlist-file '${{ steps.prefix.outputs.dir }}/include/magic.h'
          --opaque-type 'magic_set'
          --no-copy 'magic_set'
          --rust-target '1.64.0'
          --output '${{ steps.bindings.outputs.dir }}/bindings.rs'
          '${{ steps.prefix.outputs.dir }}/include/magic.h'

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bindgen-${{ matrix.version }}
          path: |
            ${{ steps.bindings.outputs.dir }}/bindings.rs
